@{
    Layout = "~/Shared/_Layout.cshtml";
    Page.Title = "Kalender";

    string action = "";

    Session["loginError"] = "";
    if (IsPost)
    {
        action = Request["action"];

        switch (action)
        {
            case "login":
                if (Session["cursist"] == null)
                {
                    try
                    {

                        Session["cursist"] = Administratix.Model.Cursist.Login(Request["Login-CursistNummer"]);
                    }
                    catch (Exception e)
                    {

                        Session["loginError"] = e.Message;
                    }

                }
                break;

            case "logout":
                Session["cursist"] = null;
                break;

        }
    }

    if (Session["cursist"] == null)
    {
        Response.Redirect("~/Deelpagina's/Default.cshtml");
    }


    //System.Threading.Thread.CurrentThread.CurrentCulture = new System.Globalization.CultureInfo("nl-BE");

    System.Globalization.CultureInfo culture = new System.Globalization.CultureInfo("nl-BE");

    List<Administratix.BLL.LesDavinci> lessenrooster = new List<Administratix.BLL.LesDavinci>();
    List<Administratix.BLL.KalenderDag> feestdagen = new List<Administratix.BLL.KalenderDag>();

        Administratix.BLL.Cursist cursist = (Administratix.BLL.Cursist)Session["cursist"];
        //lessenrooster = Administratix.Model.LesDavinci.LesroosterTonen(Convert.ToInt32(cursistNr));

        //start datum rooster
        DateTime vandaag = DateTime.Now;
        //vandaag = new DateTime(2014, 12, 1);

        int maand = vandaag.Month; //Convert.ToInt32(vandaag.ToString("MM", culture));
        int jaar = vandaag.Year; //Convert.ToInt32(vandaag.ToString("yyyy", culture));

        DateTime startDatum = new DateTime(jaar, maand, 1);
        int startWeekDag = (int)(startDatum.DayOfWeek+6)%7+1;
        // starten op maandag
        startDatum = startDatum.AddDays((1 - startWeekDag));

        DateTime eindDatum = new DateTime(jaar, maand, DateTime.DaysInMonth(jaar, maand));
        int eindWeekDag = (int)(eindDatum.DayOfWeek + 6) % 7+1;
        // stoppen op zondag
        eindDatum = eindDatum.AddDays(7 - eindWeekDag);

        lessenrooster = Administratix.Model.LesDavinci.LesDavinciSelectAllByCursistNummerAndDates(cursist.CursistNummer, startDatum, eindDatum);
        feestdagen = Administratix.Model.Kalender.KalenderSelectAllByDates(startDatum, eindDatum);
        lessenrooster = Administratix.Model.LesDavinci.LesDavinciSelectAllByCursistNummerWithVakantieDagen(lessenrooster, feestdagen);



        Administratix.BLL.Kalender kalender = new Administratix.BLL.Kalender();
        kalender.CreerDagen(startDatum, eindDatum);
        kalender.VoegFeestenToe(feestdagen);
}



@*debug*@
<div>
    vandaag: @vandaag.ToString() <br />
    maand: @maand <br />
    jaar: @jaar <br />
    startDatum: @startDatum.ToString() <br />
    eindDatum: @eindDatum.ToString() <br />
    startWeekDag: @startWeekDag <br />
    eindWeekDag: @eindWeekDag <br />
</div>


<div class="itemContainer">
    @for (int i = 0; i < kalender.Dagen.Count; i++)
    {
        Administratix.BLL.KalenderDag dag = kalender.Dagen[i];
        <div class="itemBox kalenderBox @(dag.Datum.Date == vandaag.Date?"blue":"") @(dag.Datum.Month != vandaag.Month?"fade":"")" id="@i">
            <a class="itemTitle" href="#@i">
                @dag.Datum.ToString("ddd d/M", culture)
                <div class="kalenderIcons">
                    @if (dag.Feesten.Count > 0)
                    {
                        <img class="img_Vakantie" />
                    }
                </div>
            </a>

            <div class="itemContent kalender">
                @foreach (Administratix.BLL.KalenderDag feest in dag.Feesten)
	            {
		            @feest.Omschrijving <br/>
	            }
            </div>
        </div>
    }
</div>

   
